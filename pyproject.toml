[tool.poetry]
name = "pytest-parametrization-annotations"
version = "0.1.0"
description = "A pytest library for parametrizing tests with type hints."
authors = ["Fabian Haenel <contact@fabian-haenel.io>"]
readme = "README.md"
packages = [{include = "pytest_parametrization_annotation", from = "src"}]
classifiers = [
    # Status
    "Development Status :: 4 - Beta",

    # License
    "License :: OSI Approved :: BSD License",

    # Officially supported python versions
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",

    # Topics
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
    "Topic :: Utilities",

    # Misc
    "Typing :: Typed",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
]

[tool.poetry.plugins."pytest11"]
pytest-parametrization-annotation = "pytest_parametrization_annotation.plugin"


[tool.poetry.dependencies]
python = ">=3.10"
pytest = ">=7"


[tool.poetry.group.linting.dependencies]
ruff = "v0.3.4"
black = "v24.3"
mypy = "^1.9.0"

[tool.poetry.group.testing.dependencies]
pytest-cov = "*"
jinja2 = ">=3"
tox = "^4.14.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
python_files = ["test_*.py"]
pythonpath = ["src"]
testpaths = ["tests/"]
markers = [
    "case: Define a test case based on type annotations",
]

[tool.ruff]
src = ["src"]
exclude = [".py.j2"]

[tool.black]
target-version = ["py310", "py311", "py312"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
files = ["src", "tests"]